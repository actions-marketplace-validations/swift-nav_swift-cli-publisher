name: "Registry release listener"
description: "Listens for new releases on registry packages"
inputs:
  token:
    description: "Github Access Token"
    required: true
  gh-name:
    description: "Github account name"
    required: true
  gh-email:
    description: "Github account email"
    required: true

runs:
  using: composite
  steps:
    - name: "Checkout swift-cli-publisher"
      uses: actions/checkout@v3
      with:
        repository: swift-nav/swift-cli-publisher
        ref: main

    # quick fix under path package-registry as clean doesn't work.
    - name: "Get package registry data"
      uses: actions/checkout@v3
      with:
        repository: swift-nav/package-registry
        token: ${{ inputs.token }}
        path: 'package-registry'
        ref: main

    - name: "Move script into package-registry"
      shell: bash
      run: mv -v link_release.sh template.json package-registry

    - name: "Store name and version env vars"
      shell: bash
      run: |
        echo "NAME=${NAME:-${{ github.event.repository.name }}}" >> $GITHUB_ENV
        echo "VERSION=${VERSION:-${GITHUB_REF##*/}}" >> $GITHUB_ENV
        echo "Stored ${{ env.NAME }} and ${{ env.VERSION }}"

    - name: "Ensures release is not linked"
      shell: bash
      working-directory: package-registry
      run: |
        if cat data/${{ env.NAME }} | grep "\"version\":\"${{ env.VERSION }}\""; then
          exit 1
        fi

    - name: "Retrieve Linux asset"
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        gh release -R swift-nav/${{ env.NAME }} download ${{ env.VERSION }}
    
    - name: "Linux retrieval debug"
      shell: bash
      run: find .

    # - name: "Retrieve macos asset"
    #   uses: dsaltares/fetch-gh-release-asset@master
    #   with:
    #     repo: 'swift-nav/${{ env.NAME }}'
    #     version: '${{ env.VERSION }}'
    #     file: '${{ env.DL_MAC }}'
    #     token: ${{ inputs.token }}

    # - name: "Macos retrieval debug"
    #   shell: bash
    #   run: find .

    - name: "Modify data to link release"
      shell: bash
      working-directory: package-registry
      env:
        NAME: ${{ env.NAME }}
        VERSION: ${{ env.VERSION }}
      run: bash link_release.sh

    - name: "Create pull request from changes"
      shell: bash
      working-directory: package-registry
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        rm link_release.sh template.json
        git config --global user.email "${{ inputs.gh-email }}"
        git config --global user.name "${{ inputs.gh-name }}"
        git switch -c "coolbot/update-${{ env.NAME }}-${{ env.VERSION }}"
        git add .
        git commit -m "Updating release for ${{ env.NAME }}-${{ env.VERSION }}"
        git push --set-upstream origin coolbot/update-${{ env.NAME }}-${{ env.VERSION }} -f
        gh pr create \
          --title "Release for ${{ env.NAME }}-${{ env.VERSION }}" \
          --body "Automated registry sync for ${{ env.NAME }} created by tag ${{ env.VERSION }}" \
          --reviewer adrian-kong,isaactorz,silverjam



  # 1. need to fetch asset file (https://github.com/marketplace/actions/fetch-github-release-asset)
  # 2. calculate file hash 
  # 3.


  # 2 parts
  # saving the hash
  # fetchign the hash (swift-cli)

  #potential problem: github-actions vs jenkins timing (resolve by adding enforce versions flag)